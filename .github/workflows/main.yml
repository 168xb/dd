name: Update

on:
  push:
    paths:
      - 'data/jd.ip'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # This ensures we get the full git history for path filtering
      
      - name: Check if jd.ip was changed
        id: check-jd
        run: |
          # Check if jd.ip was modified in the recent push
          if git diff --name-only HEAD^ HEAD | grep -q 'data/jd.ip'; then
            echo "jd_ip_changed=true" >> $GITHUB_OUTPUT
          else
            echo "jd_ip_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Exit if jd.ip wasn't changed
        if: steps.check-jd.outputs.jd_ip_changed == 'false' && github.event_name == 'push'
        run: |
          echo "jd.ip wasn't changed - exiting workflow"
          exit 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.3'

      - name: Install dependencies
        run: pip install selenium requests futures eventlet aiohttp aiofiles asyncio

      - name: Create directory
        run: |
          mkdir -p ${{ github.workspace }}/txt
          echo "Directories created"

      - name: Run cctv
        run: |
          python ${{ github.workspace }}/Code/main.py
          ls -l  # Check the generated file

      - name: Clean up current repository files
        run: |
          # Delete .ip files from data folder
          if [ -d "$GITHUB_WORKSPACE/data" ]; then
            find "$GITHUB_WORKSPACE/data" -name "*.ip" -type f -delete
            echo "Deleted .ip files from data folder"
          fi
          
          # Delete .py files from Code folder (except main.py)
          if [ -d "$GITHUB_WORKSPACE/Code" ]; then
            find "$GITHUB_WORKSPACE/Code" -name "*.py" -not -name "main.py" -type f -delete
            echo "Deleted .py files from Code folder"
          fi

      - name: Commit cleanup changes to current repository
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data/ Code/
          git commit -m "Update the file"
          git push

      - name: Checkout target repository
        uses: actions/checkout@v3
        with:
          repository: 168xb/jd
          token: ${{ secrets.PRIVATE_REPO_TOKEN }}
          path: target-repo

      - name: Copy TXT files to target repository
        run: |
          # Create itv directory if it doesn't exist
          mkdir -p target-repo/itv
          # Copy all txt files from source to target
          cp -r $GITHUB_WORKSPACE/txt/* target-repo/itv/
          echo "Files copied to target repository"

      - name: Commit and push to target repository
        run: |
          cd target-repo
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add itv/
          git commit -m "Update multicast source files"
          git push