name: Update JD Files

on:
  push:
    paths:
      - 'data/jd.ip'
  workflow_dispatch:

jobs:
  check-files:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.match }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check for jd.ip changes
        id: check
        run: |
          changed_files=$(git diff --name-only HEAD^ HEAD)
          echo "Changed files: $changed_files"
          
          if echo "$changed_files" | grep -q 'data/jd\.ip'; then
            echo "Detected jd.ip changes"
            echo "match=true" >> $GITHUB_OUTPUT
          else
            echo "No jd.ip changes detected"
            echo "match=false" >> $GITHUB_OUTPUT
          fi

  update-files:
    needs: check-files
    if: needs.check-files.outputs.should_run == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.3'

      - name: Install dependencies
        run: pip install selenium requests futures eventlet aiohttp aiofiles asyncio

      - name: Create directory
        run: |
          mkdir -p ${{ github.workspace }}/txt
          echo "Directories created"

      - name: Run main script
        run: |
          python ${{ github.workspace }}/Code/main.py
          ls -l  # Check the generated file

      - name: Clean up current repository files
        run: |
          # Delete .ip files from data folder
          if [ -d "$GITHUB_WORKSPACE/data" ]; then
            find "$GITHUB_WORKSPACE/data" -name "*.ip" -type f -delete
            echo "Deleted .ip files from data folder"
          fi
          
          # Delete .py files from Code folder (except main.py)
          if [ -d "$GITHUB_WORKSPACE/Code" ]; then
            find "$GITHUB_WORKSPACE/Code" -name "*.py" -type f -delete
            echo "Deleted .py files from Code folder"
          fi

      - name: Commit cleanup changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data/ Code/
          git commit -m "Clean up files after update"
          git push

      - name: Checkout target repository
        uses: actions/checkout@v4
        with:
          repository: 168xb/jd
          token: ${{ secrets.PRIVATE_REPO_TOKEN }}
          path: target-repo

      - name: Copy TXT files to target repository
        run: |
          # Create itv directory if it doesn't exist
          mkdir -p target-repo/itv
          # Copy all txt files from source to target
          cp -r $GITHUB_WORKSPACE/txt/* target-repo/itv/ || echo "No files to copy"
          echo "Files copied to target repository"

      - name: Commit and push to target repository
        run: |
          cd target-repo
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add itv/
          git commit -m "Update multicast source files"
          git push